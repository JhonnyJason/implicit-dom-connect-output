// Generated by CoffeeScript 2.5.1
(function() {
  var args, cfg, coffee, eternalWatch, log, mainprocessmodule, olog, onChangeProcess, ostr, path, print, process, pug, watchFiles;

  mainprocessmodule = {
    name: "mainprocessmodule"
  };

  //###########################################################
  //region logPrintFunctions
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["mainprocessmodule"] != null) {
      console.log("[mainprocessmodule]: " + arg);
    }
  };

  olog = function(o) {
    return log("\n" + ostr(o));
  };

  ostr = function(o) {
    return JSON.stringify(o, null, 4);
  };

  print = function(arg) {
    return console.log(arg);
  };

  //endregion

  //###########################################################
  //region localModules
  cfg = null;

  pug = null;

  path = null;

  coffee = null;

  //endregion

  //###########################################################
  args = null;

  //###########################################################
  mainprocessmodule.initialize = function() {
    log("mainprocessmodule.initialize");
    cfg = allModules.configmodule;
    pug = allModules.pughandlermodule;
    path = allModules.pathhandlermodule;
    coffee = allModules.coffeehandlermodule;
  };

  onChangeProcess = async function() {
    log("onChangeProcess");
    path.stopWatchingFiles();
    await path.prepareCoffeeCodePath(args.coffeeCode);
    await path.prepareOutputPath(args.output);
    await process();
    watchFiles();
  };

  watchFiles = function() {
    var coffeeFiles, pugFiles;
    log("watchFiles");
    pugFiles = pug.getProcessedFiles();
    path.onAnyFileChanges(pugFiles, onChangeProcess);
    coffeeFiles = path.coffeeCodeFilePaths;
    path.onAnyFileChanges(coffeeFiles, onChangeProcess);
  };

  eternalWatch = function() {
    var eternalPromise;
    log("eternalWatch");
    watchFiles();
    eternalPromise = new Promise(function(resolve, reject) {
      var neverCalledResolve, resolveFunction;
      resolveFunction = function() {
        return resolve("done");
      };
      neverCalledResolve = resolveFunction;
    });
    return eternalPromise;
  };

  process = async function() {
    log("process");
    await pug.readFiles();
    await coffee.scanForUsedIds();
    await coffee.writeOutputFile();
  };

  //###########################################################
  mainprocessmodule.execute = async function(e) {
    var answer;
    log("mainprocessmodule.execute");
    args = e;
    await path.preparePugHeadPath(args.pugHead);
    await path.prepareCoffeeCodePath(args.coffeeCode);
    await path.prepareOutputPath(args.output);
    await process();
    if (args.watch) {
      answer = (await eternalWatch());
    }
  };

  module.exports = mainprocessmodule;

}).call(this);
